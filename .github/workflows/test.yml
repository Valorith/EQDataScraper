name: Test Suite

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install backend dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
    
    - name: Run backend tests
      run: |
        cd backend
        python -m pytest --cov --cov-report=xml --cov-report=term-missing
      env:
        TESTING: 1
        DATABASE_URL: ""
        CACHE_EXPIRY_HOURS: 1
        PRICING_CACHE_EXPIRY_HOURS: 1
    
    - name: Upload backend coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install frontend dependencies
      run: npm ci
    
    - name: Run frontend tests
      run: npm run test:coverage
      env:
        NODE_ENV: test
    
    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/coverage-final.json
        flags: frontend
        name: frontend-coverage

  integration-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install all dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        cd ..
        npm ci
    
    - name: Start backend service
      run: |
        cd backend
        python app.py &
        sleep 10
      env:
        TESTING: 1
        DATABASE_URL: ""
        PORT: 5999
    
    - name: Run integration tests
      run: |
        # Test that backend is responding
        curl -f http://localhost:5999/api/health || exit 1
        
        # Test basic API endpoints
        curl -f http://localhost:5999/api/classes || exit 1
        
        echo "Integration tests passed"

  deployment-check:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, integration-tests]
    if: github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build frontend
      run: npm run build
    
    - name: Check build artifacts
      run: |
        if [ ! -d "dist" ]; then
          echo "Build failed - dist directory not found"
          exit 1
        fi
        
        if [ ! -f "dist/index.html" ]; then
          echo "Build failed - index.html not found"
          exit 1
        fi
        
        echo "Build check passed"